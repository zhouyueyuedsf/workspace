package com.gc.materialdesign.widgets;

import android.app.Activity;
import android.content.Context;
import android.content.DialogInterface;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.opengl.Visibility;
import android.os.Bundle;
import android.provider.CalendarContract.Instances;
import android.util.DisplayMetrics;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.view.View.OnTouchListener;
import android.view.Window;
import android.view.animation.Animation;
import android.view.animation.Animation.AnimationListener;
import android.view.animation.AnimationUtils;
import android.widget.Adapter;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.AutoCompleteTextView;
import android.widget.DatePicker;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;

import com.gc.materialdesign.R;
import com.gc.materialdesign.views.ButtonFlat;

public class Dialog extends android.app.Dialog {
	Boolean bool = false;
	Context context;
	View view;
	View v;
	View backView;
	String message = "";
	TextView messageTextView;
	String title;
	TextView titleTextView;
	ListView listView;
	CharSequence[] mItems;
	int subLayout;

	ButtonFlat buttonAccept;
	ButtonFlat buttonCancel;

	String buttonCancelText;

	OnItemClickListener onItemClickListener;
	View.OnClickListener onAcceptButtonClickListener;
	View.OnClickListener onCancelButtonClickListener;

	public Dialog(Context context) {
		super(context);
	}

	public Dialog(Context context, String title, String message) {
		super(context, android.R.style.Theme_Translucent);
		this.context = context;// init Context
		this.message = message;
		this.title = title;
	}

	public Dialog(Context context, String title) {
		super(context, android.R.style.Theme_Translucent);
		this.context = context;
		this.title = title;
	}

	public void addCancelButton(String buttonCancelText) {
		this.buttonCancelText = buttonCancelText;
	}

	public void addCancelButton(String buttonCancelText,
			View.OnClickListener onCancelButtonClickListener) {
		this.buttonCancelText = buttonCancelText;
		this.onCancelButtonClickListener = onCancelButtonClickListener;
	}

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		super.onCreate(savedInstanceState);
		setContentView(R.layout.dialog);

		view = (RelativeLayout) this.findViewById(R.id.contentDialog);
		backView = (RelativeLayout) this.findViewById(R.id.dialog_rootView);
		backView.setOnTouchListener(new OnTouchListener() {
			@Override
			public boolean onTouch(View v, MotionEvent event) {
				if (event.getX() < view.getLeft()
						|| event.getX() > view.getRight()
						|| event.getY() > view.getBottom()
						|| event.getY() < view.getTop()) {
					dismiss();
				}
				return false;
			}
		});

		this.titleTextView = (TextView) findViewById(R.id.title);
		setTitle(title);

		// this.messageTextView = (TextView) findViewById(R.id.message);
		// setMessage(message);
		this.buttonAccept = (ButtonFlat) findViewById(R.id.button_accept);
		buttonAccept.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				dismiss();
				if (onAcceptButtonClickListener != null)
					onAcceptButtonClickListener.onClick(v);
			}
		});

		if (buttonCancelText != null) {
			this.buttonCancel = (ButtonFlat) findViewById(R.id.button_cancel);
			this.buttonCancel.setVisibility(View.VISIBLE);
			this.buttonCancel.setText(buttonCancelText);
			buttonCancel.setOnClickListener(new View.OnClickListener() {

				@Override
				public void onClick(View v) {
					dismiss();
					if (onCancelButtonClickListener != null)
						onCancelButtonClickListener.onClick(v);
				}
			});
		}
		if (mItems != null) {
			listView = this.getListView(mItems);
			listView.setOnItemClickListener(onItemClickListener);
			setContentView(listView);
		}
		setPerference();
	}

	// 由布局文件得到view
	public View getPartView(int res, ViewGroup root) {
		// 将xml布局文件生成view对象通过LayoutInflater
		LayoutInflater inflater = (LayoutInflater) context
				.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		// 将view对象挂载到那个父元素上，这里没有就为null
		return inflater.inflate(res, root, false);
	}

	public Dialog setItems(CharSequence[] items, OnItemClickListener listener) {
		this.mItems = items;
		this.onItemClickListener = listener;
		return this;
	}
/**
 * 由选项转换成简单的listView
 * @param items
 * @return
 */
	private ListView getListView(CharSequence[] items) {
		final ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(
				context, R.layout.simple_list_item);
		for (int i = 0; i < items.length; i++) {
			arrayAdapter.add((String) items[i]);
		}
		ListView listView2 = new ListView(context);
		listView2.setLayoutParams(new ViewGroup.LayoutParams(
				ViewGroup.LayoutParams.MATCH_PARENT,
				ViewGroup.LayoutParams.MATCH_PARENT));
		float scale = context.getResources().getDisplayMetrics().density;
		int dpAsPixels = (int) (8 * scale + 0.5f);
		listView2.setPadding(0, dpAsPixels, 0, dpAsPixels);
		listView2.setDivider(new ColorDrawable(Color.GRAY)); 
		listView2.setDividerHeight(1);
		listView2.setAdapter(arrayAdapter);
		return listView2;
	}

	private void setPerference() {
		Window dialogWindow = getWindow();
		WindowManager.LayoutParams lp = dialogWindow.getAttributes();
		DisplayMetrics d = context.getResources().getDisplayMetrics(); // 获取屏幕宽、高用
		lp.width = (int) (d.widthPixels * 1f); // 高度设置为屏幕的0.6
		lp.height = (int) (d.heightPixels * 1f);
		dialogWindow.setAttributes(lp);

	}

	public void setContentView(View contentView) {
		// 1.判断是不是listView?
		if (contentView instanceof ListView) {
			setListViewHeightBasedOnChildren((ListView) contentView);
		}
		// 2.next
		// Activity the = (Activity) context;
		LinearLayout linearLayout = (LinearLayout) this
				.findViewById(R.id.message_content_view);
		LinearLayout linearLayout2 = (LinearLayout) this
				.findViewById(R.id.layout_button);
		if (linearLayout2 != null) {
			linearLayout2.getChildAt(1).setVisibility(View.GONE);
		}
		if (linearLayout != null) {
			linearLayout.removeAllViews();
			linearLayout.addView(contentView);
		}
		for (int i = 0; i < linearLayout.getChildCount(); i++) {
			if (linearLayout.getChildAt(i) instanceof AutoCompleteTextView) {
				AutoCompleteTextView autoCompleteTextView = (AutoCompleteTextView) linearLayout
						.getChildAt(i);
				autoCompleteTextView.setFocusable(true);
				autoCompleteTextView.requestFocus();
				autoCompleteTextView.setFocusableInTouchMode(true);
			}
		}
	}

	private void setListViewHeightBasedOnChildren(ListView listView) {
		ListAdapter listAdapter = listView.getAdapter();
		if (listAdapter == null) {
			// pre-condition
			return;
		}

		int totalHeight = 0;
		for (int i = 0; i < listAdapter.getCount(); i++) {
			View listItem = listAdapter.getView(i, null, listView);
			listItem.measure(0, 0);
			totalHeight += listItem.getMeasuredHeight();
		}

		ViewGroup.LayoutParams params = listView.getLayoutParams();
		params.height = totalHeight
				+ (listView.getDividerHeight() * (listAdapter.getCount() - 1));
		listView.setLayoutParams(params);
	}

	@Override
	public void show() {
		// TODO 自动生成的方法存根
		super.show();
		// set dialog enter animations
		view.startAnimation(AnimationUtils.loadAnimation(context,
				R.anim.dialog_main_show_amination));
		backView.startAnimation(AnimationUtils.loadAnimation(context,
				R.anim.dialog_root_show_amin));
		listView.startAnimation(AnimationUtils.loadAnimation(context,
				R.anim.dialog_root_show_amin));
	}

	// GETERS & SETTERS
	public String getMessage() {
		return message;
	}

	public void setMessage(String message) {
		this.message = message;
		messageTextView.setText(message);
	}

	public TextView getMessageTextView() {
		return messageTextView;
	}

	public void setMessageTextView(TextView messageTextView) {
		this.messageTextView = messageTextView;
	}

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
		if (title == null)
			titleTextView.setVisibility(View.GONE);
		else {
			titleTextView.setVisibility(View.VISIBLE);
			titleTextView.setText(title);
		}
	}

	public TextView getTitleTextView() {
		return titleTextView;
	}

	public void setTitleTextView(TextView titleTextView) {
		this.titleTextView = titleTextView;
	}

	public ButtonFlat getButtonAccept() {
		return buttonAccept;
	}

	public void setButtonAccept(ButtonFlat buttonAccept) {
		this.buttonAccept = buttonAccept;
	}

	public ButtonFlat getButtonCancel() {
		return buttonCancel;
	}

	public void setButtonCancel(ButtonFlat buttonCancel) {
		this.buttonCancel = buttonCancel;
	}
	
	public void setOnAcceptButtonClickListener(
			View.OnClickListener onAcceptButtonClickListener) {
		this.onAcceptButtonClickListener = onAcceptButtonClickListener;
		if (buttonAccept != null)
			buttonAccept.setOnClickListener(onAcceptButtonClickListener);
	}

	public void setOnCancelButtonClickListener(
			View.OnClickListener onCancelButtonClickListener) {
		this.onCancelButtonClickListener = onCancelButtonClickListener;
		if (buttonCancel != null)
			buttonCancel.setOnClickListener(onCancelButtonClickListener);
	}

	public OnItemClickListener getOnItemClickListener() {
		return onItemClickListener;
	}

	//
	// public void setOnItemClickListener(OnItemClickListener
	// onItemClickListener) {
	// this.onItemClickListener = onItemClickListener;
	// }

	@Override
	public void dismiss() {
		Animation anim = AnimationUtils.loadAnimation(context,
				R.anim.dialog_main_hide_amination);
		anim.setAnimationListener(new AnimationListener() {

			@Override
			public void onAnimationStart(Animation animation) {
			}

			@Override
			public void onAnimationRepeat(Animation animation) {
			}

			@Override
			public void onAnimationEnd(Animation animation) {
				view.post(new Runnable() {
					@Override
					public void run() {
						Dialog.super.dismiss();
					}
				});

			}
		});
		Animation backAnim = AnimationUtils.loadAnimation(context,
				R.anim.dialog_root_hide_amin);

		view.startAnimation(anim);
		backView.startAnimation(backAnim);
	}

}
